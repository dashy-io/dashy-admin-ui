"use strict";angular.module("dashyAdmin",["ui.router"]),angular.module("dashyAdmin").run(["$rootScope","$state","LoginService",function(t,o,e){t.$on("$stateChangeStart",function(t,n){n.authenticate&&"logged_in"!==e.getStatus()&&(o.go("login"),t.preventDefault())})}]),angular.module("dashyAdmin").controller("LoginCtrl",["$rootScope","$state","LoginService",function(t,o,e){var n=this;e.init(),n.hideLogin=!0,t.$on("userLogout",function(){n.hideLogin=!1}),t.$on("userLoggedIn",function(){n.hideLogin=!0,n.user=e.currentUser}),n.logout=function(){e.logout()}}]),angular.module("dashyAdmin").controller("ServerStatusCtrl",["Api",function(t){var o=this,e=t.getServerStatus();e.success(function(t,e){o.status=e,$(".btn-newDevice").prop("disabled",!1)}).error(function(){o.status=0})}]),angular.module("dashyAdmin").controller("NewDeviceCtrl",["Api","$timeout",function(t,o){this.shortCode=null,this.validateShortCode=null,this.newDevice=function(){null===this.shortCode||6!==this.shortCode.length?this.validateShortCode=!1:(this.validateShortCode=!0,$(".btn-connectDevice").button("loading"),o(function(){$(".btn-connectDevice").button("reset"),$("#connectDevice").modal("hide"),this.shortCode="",this.validateShortCode=null},1500))}}]),angular.module("dashyAdmin").controller("DashboardsListCtrl",["Api","LoginService",function(t,o){var e=this,n=t.getUserDashboards(o.currentUser.id);n.success(function(o){o.dashboards?(e.noDashboards=!1,o.dashboards.forEach(function(o){t.getDashboard(o).success(function(t){e.dashboards=[],e.dashboards.push(t)}).error(function(t){$.snackbar({content:'<i class="fa fa-3x fa-ban pull-left"></i>'+o+"<br>"+t.message,timeout:0})})})):(e.dashboards=[],e.noDashboards=!0)}).error(function(){e.dashboards=[],e.dashboardsError="Couldn't load your dashboards"}),e.deleteDashboard=function(t){window.confirm("Are you sure you want to delete your dashboard "+t.name)&&console.log("deleting "+t.id)}}]),angular.module("dashyAdmin").controller("DashboardCtrl",["$scope","Api","$stateParams",function(t,o,e){o.getDashboard(e.dashboardId).success(function(o){t.dashboard=o}),t.addUrl=function(){t.dashboard.urls.push("")},t.removeUrl=function(o){t.dashboard.urls.splice(o,1)},t.saveDashboard=function(t){$(".btn-save").button("loading"),$(".btn-save").prop("disabled",!0),o.setDashboard(t).success(function(){$.snackbar({content:"Your dashboard has been updated!"}),$(".btn-save").button("reset")}).error(function(t){window.alert("error updating: "+t)})}}]),angular.module("dashyAdmin").config(["$stateProvider","$urlRouterProvider",function(t,o){o.otherwise("/dashboards"),t.state("login",{url:"/login",authenticate:!1}).state("dashboardsList",{url:"/dashboards",views:{content:{templateUrl:"dashboardList.html",controller:"DashboardsListCtrl",controllerAs:"DashboardList"}},authenticate:!0}).state("dashboardEdit",{url:"/dashboards/:dashboardId",views:{content:{templateUrl:"dashboardEdit.html",controller:"DashboardCtrl"}},authenticate:!0})}]),angular.module("dashyAdmin").factory("Api",["$http",function(t){return{getServerStatus:function(){return t.get("http://api.dashy.io/status")},getUserDashboards:function(o){return t.get("http://api.dashy.io/users/"+o)},newDevice:function(o){return t({method:"POST",headers:{"Content-Type":"application/json"},data:{id:o},url:"http://api.dashy.io/dashboards"})},getDashboard:function(o){return t.get("http://api.dashy.io/dashboards/"+o)},deleteDashboard:function(o){return t.delete("http://api.dashy.io/dashboards/"+o)},setDashboard:function(o){return t({method:"PUT",headers:{"Content-Type":"application/json"},data:{interval:o.interval,name:o.name,urls:o.urls},url:"http://api.dashy.io/dashboards/"+o.id})}}}]),angular.module("dashyAdmin").service("LoginService",["$rootScope","$timeout","$http","$window","$state",function(t,o,e,n,s){function a(t){g!==t&&(console.log("LoginService status: "+t),g=t)}function r(t){console.log("Disconnecting token",t);var o="https://accounts.google.com/o/oauth2/revoke?token="+t;e.jsonp(o).success(function(t,o){console.log("disconnectUser() Logged Out",t,o)}).error(function(t,o,e,n,s){console.log("disconnectUser() Error",t,o,s)})}function i(o){return h.authStatus?void console.log("Already logged in."):(console.log("onSignInCallback() authResult:",o),h.reset(),void(o.status.signed_in?(h.authStatus=o,u()):(t.$emit("userLogout"),h.currentUser={id:null,name:null,imageUrl:null},a("logged_out"))))}function u(){e.post(c+"/auth/google/login",{access_token:h.authStatus.access_token}).success(function(t){h.token=t.token,console.log("loginGoogleUser() POST ~/api/google/authenticate success:",h.token),h.existingUser!==!1&&(h.existingUser=!0),e.defaults.headers.common.Authorization="Bearer "+h.token,l()}).error(function(t,o){403===o?(console.log("loginGoogleUser() POST ~/api/google/authenticate user not signed up:",t,o),h.existingUser=!1,d()):(console.log("loginGoogleUser() POST ~/api/google/authenticate error:",t,o),a("logged_out"),h.reset())})}function d(){e.post(c+"/auth/google/signup",{access_token:h.authStatus.access_token}).success(function(t){console.log("signupGoogleUser() POST ~/api/google/signup success:",t),u()}).error(function(t,o){console.log("signupGoogleUser() POST ~/api/google/signup error:",t,o),a("logged_out"),h.reset()})}function l(){e.get(c+"/user").success(function(o){h.user=o,console.log("getUser() GET ~/api/user success:",h.user),a("logged_in"),h.currentUser={id:h.user.id,name:h.user.name,imageUrl:h.user.imageUrl},t.$emit("userLoggedIn"),s.go("dashboardsList")}).error(function(t,o){console.log("getUser() GET ~/api/user error:",t,o),a("logged_out"),h.reset()})}this.currentUser={};var c="http://api.dashy.io",g="",h=this;a("logging_in"),this.reset=function(){this.authStatus=null,this.user=null,this.token=null,this.existingUser=null},this.reset(),this.init=function(){o(function(){n.gapi.signin.render("signInButton",{callback:function(t){o(function(){i(t)})}})})},this.getStatus=function(){return g},this.isBusy=function(){return"logging_in"===this.getStatus()||"logging_out"===this.getStatus()},this.isLoggedIn=function(){return"logged_in"===this.getStatus()},this.logout=function(){a("logging_out"),"localhost"===document.location.hostname&&r(h.authStatus.access_token),n.gapi.auth.signOut(),this.reset()}}]);